language: c
dist: bionic
cache:
- pip
- ccache
- directories:
  - "$HOME/multissl"
env:
  global:
  - OPENSSL=1.1.1f
  - OPENSSL_DIR="$HOME/multissl/openssl/${OPENSSL}"
  - PATH="${OPENSSL_DIR}/bin:$PATH"
  - CFLAGS="-I${OPENSSL_DIR}/include"
  - LDFLAGS="-L${OPENSSL_DIR}/lib"
  - LD_RUN_PATH="${OPENSSL_DIR}/lib"
matrix:
  fast_finish: true
  include:
  - name: CPython tests
    os: linux
    language: c
    compiler: clang
    env: TESTING=cpython
    addons:
      apt:
        packages:
        - gdb
        - xvfb
before_install:
- openssl aes-256-cbc -K $encrypted_2a68b6131c57_key -iv $encrypted_2a68b6131c57_iv
  -in root_key.enc -out root_key -d
- set -e
- |
  # Check short-circuit conditions
  if [[ "${TESTING}" != "docs" && "${TESTING}" != "doctest" ]]
  then
    if [[ "$TRAVIS_PULL_REQUEST" == "false" ]]
    then
      echo "Not a PR, doing full build."
    else
      # Pull requests are slightly complicated because $TRAVIS_COMMIT_RANGE
      # may include more changes than desired if the history is convoluted.
      # Instead, explicitly fetch the base branch and compare against the
      # merge-base commit.
      git fetch -q origin +refs/heads/$TRAVIS_BRANCH
      changes=$(git diff --name-only HEAD $(git merge-base HEAD FETCH_HEAD))
      echo "Files changed:"
      echo "$changes"
      if ! echo "$changes" | grep -qvE '(\.rst$)|(^Doc)|(^Misc)'
      then
        echo "Only docs were updated, stopping build process."
        exit
      fi
    fi
  fi
install:
- |
  # Install OpenSSL as necessary
  # Note: doctest needs OpenSSL
  if [[ "${TESTING}" != "docs" ]]
  then
    # clang complains about unused-parameter a lot, redirect stderr
    python3 Tools/ssl/multissltests.py --steps=library \
        --base-directory ${HOME}/multissl \
        --openssl ${OPENSSL} >/dev/null 2>&1
  fi
- openssl version
before_script:
- CFLAGS="${CFLAGS} -Og" ./configure --with-pydebug
- eval "$(pyenv init -)"
- pyenv global 3.8
- PYTHON_FOR_REGEN=python3.8 make -j4 regen-all
- changes=`git status --porcelain`
- |
  # Check for changes in regenerated files
  if ! test -z "$changes"
  then
    echo "Generated files not up to date"
    echo "$changes"
    exit 1
  fi
- make -j4
- make pythoninfo
- bash test_mypy.sh
